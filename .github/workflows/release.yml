name: 'C++ CI'

on:
  push:
    branches:
      - main
      - feature/github_actions

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install libboost-test-dev -y
      - name: Install dependencies
        if: matrix.os == 'macOS-latest'
        run: brew install boost
      - name: Build
        run: cmake . -DPATCH_VERSION=${{ github.run_number }}
      - run: cmake --build .
      - run: cmake --build . --target test
      - run: cmake --build . --target package
      - name: Create macOS DMG
        if: matrix.os == 'macOS-latest'
        run: |
          pkgbuild --identifier "com.yourcompany.helloworld" \
                  --version "1.2.3" \
                  --install-location "/Applications" \
                  --sign "Developer ID Application" \
                  --output "app-1.2.3-macos.dmg" \
                  build/release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Linux Release Asset
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/release/app-1.2.3-linux.deb
          asset_name: app-1.2.3-linux.deb
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload macOS Release Asset
        if: matrix.os == 'macOS-latest'
        id: upload-macos-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/release/app-1.2.3-macos.dmg
          asset_name: app-1.2.3-macos.dmg
          asset_content_type: application/x-apple-diskimage